<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QBmRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUAAAAB
        AAAARgEoAAMAAAABAAIAAAExAAIAAAAQAAAATgAAAAAAAABgAAAAAQAAAGAAAAABUGFpbnQuTkVUIHYz
        LjIwAP/bAEMAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAf/bAEMBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAf/AABEIAB8AZAMBIgACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAA
        AAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgj
        QrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2
        d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj
        5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIE
        BAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYn
        KCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqi
        o6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEA
        AhEDEQA/AP76KK/mK8E/8FVf+Cl37Rf7S3xm1/8AZR/Z6/Zz+J37Kn7N/wC2FafssfE/9n+XxJq1p+3D
        qHg3TL3T9N8cftDQQah4o0bwh4b8N6TPfyXejaNd6Xci+Wxn0dBqd1aatqNomn/t/wD/AAWZ/aJ/bJ/4
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/////////////////////////n////k////iv///lV///iqf//lVT//iKq//l
        VUf/ipqf/lVdf/iqnn/lVV+/iqqPz1VVd+EqqA/+lUf//qqf//7Ub//+yff//uf4//7//wAB////////
        /////////////////////////////w==
</value>
  </data>
</root>