//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4984
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Reports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("PIOWorkLists")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class PIOWorkLists : global::System.Data.DataSet {
        
        private employee_worklistDataTable tableemployee_worklist;
        
        private imagesDataTable tableimages;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PIOWorkLists() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected PIOWorkLists(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["employee_worklist"] != null)) {
                    base.Tables.Add(new employee_worklistDataTable(ds.Tables["employee_worklist"]));
                }
                if ((ds.Tables["images"] != null)) {
                    base.Tables.Add(new imagesDataTable(ds.Tables["images"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public employee_worklistDataTable employee_worklist {
            get {
                return this.tableemployee_worklist;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public imagesDataTable images {
            get {
                return this.tableimages;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            PIOWorkLists cln = ((PIOWorkLists)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["employee_worklist"] != null)) {
                    base.Tables.Add(new employee_worklistDataTable(ds.Tables["employee_worklist"]));
                }
                if ((ds.Tables["images"] != null)) {
                    base.Tables.Add(new imagesDataTable(ds.Tables["images"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableemployee_worklist = ((employee_worklistDataTable)(base.Tables["employee_worklist"]));
            if ((initTable == true)) {
                if ((this.tableemployee_worklist != null)) {
                    this.tableemployee_worklist.InitVars();
                }
            }
            this.tableimages = ((imagesDataTable)(base.Tables["images"]));
            if ((initTable == true)) {
                if ((this.tableimages != null)) {
                    this.tableimages.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "PIOWorkLists";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/PIOWorkLists.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableemployee_worklist = new employee_worklistDataTable();
            base.Tables.Add(this.tableemployee_worklist);
            this.tableimages = new imagesDataTable();
            base.Tables.Add(this.tableimages);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeemployee_worklist() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeimages() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            PIOWorkLists ds = new PIOWorkLists();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void employee_worklistRowChangeEventHandler(object sender, employee_worklistRowChangeEvent e);
        
        public delegate void imagesRowChangeEventHandler(object sender, imagesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class employee_worklistDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnemployee_id;
            
            private global::System.Data.DataColumn columnfirst_name;
            
            private global::System.Data.DataColumn columnlast_name;
            
            private global::System.Data.DataColumn columnworking_unit;
            
            private global::System.Data.DataColumn columnrad;
            
            private global::System.Data.DataColumn columngo_odm;
            
            private global::System.Data.DataColumn columndiv_praz;
            
            private global::System.Data.DataColumn columnpla_od;
            
            private global::System.Data.DataColumn columnbol;
            
            private global::System.Data.DataColumn columnbol_p3;
            
            private global::System.Data.DataColumn columnporodilj;
            
            private global::System.Data.DataColumn columnvojska;
            
            private global::System.Data.DataColumn columnizost;
            
            private global::System.Data.DataColumn columnn_deteta;
            
            private global::System.Data.DataColumn columnbol100;
            
            private global::System.Data.DataColumn columnnepla_od;
            
            private global::System.Data.DataColumn columnprek_rad;
            
            private global::System.Data.DataColumn columnprera;
            
            private global::System.Data.DataColumn columnslava;
            
            private global::System.Data.DataColumn columnda_krv;
            
            private global::System.Data.DataColumn columnsl_puti;
            
            private global::System.Data.DataColumn columnsl_putz;
            
            private global::System.Data.DataColumn columnopr_izost;
            
            private global::System.Data.DataColumn columnbol_bez_ispl;
            
            private global::System.Data.DataColumn columnopr_izost_pla;
            
            private global::System.Data.DataColumn columntotal_pla;
            
            private global::System.Data.DataColumn columntotal_nepla;
            
            private global::System.Data.DataColumn columntotal_pla_min;
            
            private global::System.Data.DataColumn columntotal_nepla_min;
            
            private global::System.Data.DataColumn columnimageID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employee_worklistDataTable() {
                this.TableName = "employee_worklist";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal employee_worklistDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected employee_worklistDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn employee_idColumn {
                get {
                    return this.columnemployee_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn first_nameColumn {
                get {
                    return this.columnfirst_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn last_nameColumn {
                get {
                    return this.columnlast_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn working_unitColumn {
                get {
                    return this.columnworking_unit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn radColumn {
                get {
                    return this.columnrad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn go_odmColumn {
                get {
                    return this.columngo_odm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn div_prazColumn {
                get {
                    return this.columndiv_praz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pla_odColumn {
                get {
                    return this.columnpla_od;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bolColumn {
                get {
                    return this.columnbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bol_p3Column {
                get {
                    return this.columnbol_p3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn porodiljColumn {
                get {
                    return this.columnporodilj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vojskaColumn {
                get {
                    return this.columnvojska;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn izostColumn {
                get {
                    return this.columnizost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn n_detetaColumn {
                get {
                    return this.columnn_deteta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bol100Column {
                get {
                    return this.columnbol100;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nepla_odColumn {
                get {
                    return this.columnnepla_od;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn prek_radColumn {
                get {
                    return this.columnprek_rad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn preraColumn {
                get {
                    return this.columnprera;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn slavaColumn {
                get {
                    return this.columnslava;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn da_krvColumn {
                get {
                    return this.columnda_krv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sl_putiColumn {
                get {
                    return this.columnsl_puti;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sl_putzColumn {
                get {
                    return this.columnsl_putz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn opr_izostColumn {
                get {
                    return this.columnopr_izost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bol_bez_isplColumn {
                get {
                    return this.columnbol_bez_ispl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn opr_izost_plaColumn {
                get {
                    return this.columnopr_izost_pla;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn total_plaColumn {
                get {
                    return this.columntotal_pla;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn total_neplaColumn {
                get {
                    return this.columntotal_nepla;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn total_pla_minColumn {
                get {
                    return this.columntotal_pla_min;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn total_nepla_minColumn {
                get {
                    return this.columntotal_nepla_min;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn imageIDColumn {
                get {
                    return this.columnimageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employee_worklistRow this[int index] {
                get {
                    return ((employee_worklistRow)(this.Rows[index]));
                }
            }
            
            public event employee_worklistRowChangeEventHandler employee_worklistRowChanging;
            
            public event employee_worklistRowChangeEventHandler employee_worklistRowChanged;
            
            public event employee_worklistRowChangeEventHandler employee_worklistRowDeleting;
            
            public event employee_worklistRowChangeEventHandler employee_worklistRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addemployee_worklistRow(employee_worklistRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employee_worklistRow Addemployee_worklistRow(
                        int employee_id, 
                        string first_name, 
                        string last_name, 
                        string working_unit, 
                        string rad, 
                        string go_odm, 
                        string div_praz, 
                        string pla_od, 
                        string bol, 
                        string bol_p3, 
                        string porodilj, 
                        string vojska, 
                        string izost, 
                        string n_deteta, 
                        string bol100, 
                        string nepla_od, 
                        string prek_rad, 
                        string prera, 
                        string slava, 
                        string da_krv, 
                        string sl_puti, 
                        string sl_putz, 
                        string opr_izost, 
                        string bol_bez_ispl, 
                        string opr_izost_pla, 
                        string total_pla, 
                        string total_nepla, 
                        double total_pla_min, 
                        double total_nepla_min, 
                        sbyte imageID) {
                employee_worklistRow rowemployee_worklistRow = ((employee_worklistRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        employee_id,
                        first_name,
                        last_name,
                        working_unit,
                        rad,
                        go_odm,
                        div_praz,
                        pla_od,
                        bol,
                        bol_p3,
                        porodilj,
                        vojska,
                        izost,
                        n_deteta,
                        bol100,
                        nepla_od,
                        prek_rad,
                        prera,
                        slava,
                        da_krv,
                        sl_puti,
                        sl_putz,
                        opr_izost,
                        bol_bez_ispl,
                        opr_izost_pla,
                        total_pla,
                        total_nepla,
                        total_pla_min,
                        total_nepla_min,
                        imageID};
                rowemployee_worklistRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowemployee_worklistRow);
                return rowemployee_worklistRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                employee_worklistDataTable cln = ((employee_worklistDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new employee_worklistDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnemployee_id = base.Columns["employee_id"];
                this.columnfirst_name = base.Columns["first_name"];
                this.columnlast_name = base.Columns["last_name"];
                this.columnworking_unit = base.Columns["working_unit"];
                this.columnrad = base.Columns["rad"];
                this.columngo_odm = base.Columns["go_odm"];
                this.columndiv_praz = base.Columns["div_praz"];
                this.columnpla_od = base.Columns["pla_od"];
                this.columnbol = base.Columns["bol"];
                this.columnbol_p3 = base.Columns["bol_p3"];
                this.columnporodilj = base.Columns["porodilj"];
                this.columnvojska = base.Columns["vojska"];
                this.columnizost = base.Columns["izost"];
                this.columnn_deteta = base.Columns["n_deteta"];
                this.columnbol100 = base.Columns["bol100"];
                this.columnnepla_od = base.Columns["nepla_od"];
                this.columnprek_rad = base.Columns["prek_rad"];
                this.columnprera = base.Columns["prera"];
                this.columnslava = base.Columns["slava"];
                this.columnda_krv = base.Columns["da_krv"];
                this.columnsl_puti = base.Columns["sl_puti"];
                this.columnsl_putz = base.Columns["sl_putz"];
                this.columnopr_izost = base.Columns["opr_izost"];
                this.columnbol_bez_ispl = base.Columns["bol_bez_ispl"];
                this.columnopr_izost_pla = base.Columns["opr_izost_pla"];
                this.columntotal_pla = base.Columns["total_pla"];
                this.columntotal_nepla = base.Columns["total_nepla"];
                this.columntotal_pla_min = base.Columns["total_pla_min"];
                this.columntotal_nepla_min = base.Columns["total_nepla_min"];
                this.columnimageID = base.Columns["imageID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnemployee_id = new global::System.Data.DataColumn("employee_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemployee_id);
                this.columnfirst_name = new global::System.Data.DataColumn("first_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfirst_name);
                this.columnlast_name = new global::System.Data.DataColumn("last_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlast_name);
                this.columnworking_unit = new global::System.Data.DataColumn("working_unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnworking_unit);
                this.columnrad = new global::System.Data.DataColumn("rad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrad);
                this.columngo_odm = new global::System.Data.DataColumn("go_odm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngo_odm);
                this.columndiv_praz = new global::System.Data.DataColumn("div_praz", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiv_praz);
                this.columnpla_od = new global::System.Data.DataColumn("pla_od", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpla_od);
                this.columnbol = new global::System.Data.DataColumn("bol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbol);
                this.columnbol_p3 = new global::System.Data.DataColumn("bol_p3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbol_p3);
                this.columnporodilj = new global::System.Data.DataColumn("porodilj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnporodilj);
                this.columnvojska = new global::System.Data.DataColumn("vojska", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvojska);
                this.columnizost = new global::System.Data.DataColumn("izost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnizost);
                this.columnn_deteta = new global::System.Data.DataColumn("n_deteta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnn_deteta);
                this.columnbol100 = new global::System.Data.DataColumn("bol100", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbol100);
                this.columnnepla_od = new global::System.Data.DataColumn("nepla_od", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnepla_od);
                this.columnprek_rad = new global::System.Data.DataColumn("prek_rad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprek_rad);
                this.columnprera = new global::System.Data.DataColumn("prera", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprera);
                this.columnslava = new global::System.Data.DataColumn("slava", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslava);
                this.columnda_krv = new global::System.Data.DataColumn("da_krv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnda_krv);
                this.columnsl_puti = new global::System.Data.DataColumn("sl_puti", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsl_puti);
                this.columnsl_putz = new global::System.Data.DataColumn("sl_putz", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsl_putz);
                this.columnopr_izost = new global::System.Data.DataColumn("opr_izost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopr_izost);
                this.columnbol_bez_ispl = new global::System.Data.DataColumn("bol_bez_ispl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbol_bez_ispl);
                this.columnopr_izost_pla = new global::System.Data.DataColumn("opr_izost_pla", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopr_izost_pla);
                this.columntotal_pla = new global::System.Data.DataColumn("total_pla", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal_pla);
                this.columntotal_nepla = new global::System.Data.DataColumn("total_nepla", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal_nepla);
                this.columntotal_pla_min = new global::System.Data.DataColumn("total_pla_min", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal_pla_min);
                this.columntotal_nepla_min = new global::System.Data.DataColumn("total_nepla_min", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal_nepla_min);
                this.columnimageID = new global::System.Data.DataColumn("imageID", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimageID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employee_worklistRow Newemployee_worklistRow() {
                return ((employee_worklistRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new employee_worklistRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(employee_worklistRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.employee_worklistRowChanged != null)) {
                    this.employee_worklistRowChanged(this, new employee_worklistRowChangeEvent(((employee_worklistRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.employee_worklistRowChanging != null)) {
                    this.employee_worklistRowChanging(this, new employee_worklistRowChangeEvent(((employee_worklistRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.employee_worklistRowDeleted != null)) {
                    this.employee_worklistRowDeleted(this, new employee_worklistRowChangeEvent(((employee_worklistRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.employee_worklistRowDeleting != null)) {
                    this.employee_worklistRowDeleting(this, new employee_worklistRowChangeEvent(((employee_worklistRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeemployee_worklistRow(employee_worklistRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PIOWorkLists ds = new PIOWorkLists();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "employee_worklistDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class imagesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnimage;
            
            private global::System.Data.DataColumn columnimageID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public imagesDataTable() {
                this.TableName = "images";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal imagesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected imagesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn imageColumn {
                get {
                    return this.columnimage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn imageIDColumn {
                get {
                    return this.columnimageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public imagesRow this[int index] {
                get {
                    return ((imagesRow)(this.Rows[index]));
                }
            }
            
            public event imagesRowChangeEventHandler imagesRowChanging;
            
            public event imagesRowChangeEventHandler imagesRowChanged;
            
            public event imagesRowChangeEventHandler imagesRowDeleting;
            
            public event imagesRowChangeEventHandler imagesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddimagesRow(imagesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public imagesRow AddimagesRow(byte[] image, sbyte imageID) {
                imagesRow rowimagesRow = ((imagesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        image,
                        imageID};
                rowimagesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowimagesRow);
                return rowimagesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                imagesDataTable cln = ((imagesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new imagesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnimage = base.Columns["image"];
                this.columnimageID = base.Columns["imageID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnimage = new global::System.Data.DataColumn("image", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimage);
                this.columnimageID = new global::System.Data.DataColumn("imageID", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimageID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public imagesRow NewimagesRow() {
                return ((imagesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new imagesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(imagesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.imagesRowChanged != null)) {
                    this.imagesRowChanged(this, new imagesRowChangeEvent(((imagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.imagesRowChanging != null)) {
                    this.imagesRowChanging(this, new imagesRowChangeEvent(((imagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.imagesRowDeleted != null)) {
                    this.imagesRowDeleted(this, new imagesRowChangeEvent(((imagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.imagesRowDeleting != null)) {
                    this.imagesRowDeleting(this, new imagesRowChangeEvent(((imagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveimagesRow(imagesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PIOWorkLists ds = new PIOWorkLists();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "imagesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class employee_worklistRow : global::System.Data.DataRow {
            
            private employee_worklistDataTable tableemployee_worklist;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal employee_worklistRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableemployee_worklist = ((employee_worklistDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int employee_id {
                get {
                    try {
                        return ((int)(this[this.tableemployee_worklist.employee_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'employee_id\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.employee_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string first_name {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.first_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'first_name\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.first_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string last_name {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.last_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'last_name\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.last_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string working_unit {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.working_unitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'working_unit\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.working_unitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rad {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.radColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rad\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.radColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string go_odm {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.go_odmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'go_odm\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.go_odmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string div_praz {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.div_prazColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'div_praz\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.div_prazColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pla_od {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.pla_odColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pla_od\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.pla_odColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bol {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.bolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bol\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.bolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bol_p3 {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.bol_p3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bol_p3\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.bol_p3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string porodilj {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.porodiljColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'porodilj\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.porodiljColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string vojska {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.vojskaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'vojska\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.vojskaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string izost {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.izostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'izost\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.izostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string n_deteta {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.n_detetaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'n_deteta\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.n_detetaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bol100 {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.bol100Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bol100\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.bol100Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nepla_od {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.nepla_odColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nepla_od\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.nepla_odColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string prek_rad {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.prek_radColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'prek_rad\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.prek_radColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string prera {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.preraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'prera\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.preraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string slava {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.slavaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slava\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.slavaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string da_krv {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.da_krvColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'da_krv\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.da_krvColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sl_puti {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.sl_putiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sl_puti\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.sl_putiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sl_putz {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.sl_putzColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sl_putz\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.sl_putzColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string opr_izost {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.opr_izostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opr_izost\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.opr_izostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bol_bez_ispl {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.bol_bez_isplColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bol_bez_ispl\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.bol_bez_isplColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string opr_izost_pla {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.opr_izost_plaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opr_izost_pla\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.opr_izost_plaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string total_pla {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.total_plaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'total_pla\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.total_plaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string total_nepla {
                get {
                    try {
                        return ((string)(this[this.tableemployee_worklist.total_neplaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'total_nepla\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.total_neplaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double total_pla_min {
                get {
                    try {
                        return ((double)(this[this.tableemployee_worklist.total_pla_minColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'total_pla_min\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.total_pla_minColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double total_nepla_min {
                get {
                    try {
                        return ((double)(this[this.tableemployee_worklist.total_nepla_minColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'total_nepla_min\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.total_nepla_minColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sbyte imageID {
                get {
                    try {
                        return ((sbyte)(this[this.tableemployee_worklist.imageIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'imageID\' in table \'employee_worklist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee_worklist.imageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isemployee_idNull() {
                return this.IsNull(this.tableemployee_worklist.employee_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setemployee_idNull() {
                this[this.tableemployee_worklist.employee_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfirst_nameNull() {
                return this.IsNull(this.tableemployee_worklist.first_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfirst_nameNull() {
                this[this.tableemployee_worklist.first_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Islast_nameNull() {
                return this.IsNull(this.tableemployee_worklist.last_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setlast_nameNull() {
                this[this.tableemployee_worklist.last_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isworking_unitNull() {
                return this.IsNull(this.tableemployee_worklist.working_unitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setworking_unitNull() {
                this[this.tableemployee_worklist.working_unitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsradNull() {
                return this.IsNull(this.tableemployee_worklist.radColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetradNull() {
                this[this.tableemployee_worklist.radColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isgo_odmNull() {
                return this.IsNull(this.tableemployee_worklist.go_odmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setgo_odmNull() {
                this[this.tableemployee_worklist.go_odmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdiv_prazNull() {
                return this.IsNull(this.tableemployee_worklist.div_prazColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdiv_prazNull() {
                this[this.tableemployee_worklist.div_prazColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispla_odNull() {
                return this.IsNull(this.tableemployee_worklist.pla_odColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpla_odNull() {
                this[this.tableemployee_worklist.pla_odColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbolNull() {
                return this.IsNull(this.tableemployee_worklist.bolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbolNull() {
                this[this.tableemployee_worklist.bolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbol_p3Null() {
                return this.IsNull(this.tableemployee_worklist.bol_p3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbol_p3Null() {
                this[this.tableemployee_worklist.bol_p3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsporodiljNull() {
                return this.IsNull(this.tableemployee_worklist.porodiljColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetporodiljNull() {
                this[this.tableemployee_worklist.porodiljColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvojskaNull() {
                return this.IsNull(this.tableemployee_worklist.vojskaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvojskaNull() {
                this[this.tableemployee_worklist.vojskaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsizostNull() {
                return this.IsNull(this.tableemployee_worklist.izostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetizostNull() {
                this[this.tableemployee_worklist.izostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isn_detetaNull() {
                return this.IsNull(this.tableemployee_worklist.n_detetaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setn_detetaNull() {
                this[this.tableemployee_worklist.n_detetaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbol100Null() {
                return this.IsNull(this.tableemployee_worklist.bol100Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbol100Null() {
                this[this.tableemployee_worklist.bol100Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnepla_odNull() {
                return this.IsNull(this.tableemployee_worklist.nepla_odColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnepla_odNull() {
                this[this.tableemployee_worklist.nepla_odColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprek_radNull() {
                return this.IsNull(this.tableemployee_worklist.prek_radColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprek_radNull() {
                this[this.tableemployee_worklist.prek_radColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspreraNull() {
                return this.IsNull(this.tableemployee_worklist.preraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpreraNull() {
                this[this.tableemployee_worklist.preraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsslavaNull() {
                return this.IsNull(this.tableemployee_worklist.slavaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetslavaNull() {
                this[this.tableemployee_worklist.slavaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isda_krvNull() {
                return this.IsNull(this.tableemployee_worklist.da_krvColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setda_krvNull() {
                this[this.tableemployee_worklist.da_krvColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issl_putiNull() {
                return this.IsNull(this.tableemployee_worklist.sl_putiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsl_putiNull() {
                this[this.tableemployee_worklist.sl_putiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issl_putzNull() {
                return this.IsNull(this.tableemployee_worklist.sl_putzColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsl_putzNull() {
                this[this.tableemployee_worklist.sl_putzColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isopr_izostNull() {
                return this.IsNull(this.tableemployee_worklist.opr_izostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setopr_izostNull() {
                this[this.tableemployee_worklist.opr_izostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbol_bez_isplNull() {
                return this.IsNull(this.tableemployee_worklist.bol_bez_isplColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbol_bez_isplNull() {
                this[this.tableemployee_worklist.bol_bez_isplColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isopr_izost_plaNull() {
                return this.IsNull(this.tableemployee_worklist.opr_izost_plaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setopr_izost_plaNull() {
                this[this.tableemployee_worklist.opr_izost_plaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istotal_plaNull() {
                return this.IsNull(this.tableemployee_worklist.total_plaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settotal_plaNull() {
                this[this.tableemployee_worklist.total_plaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istotal_neplaNull() {
                return this.IsNull(this.tableemployee_worklist.total_neplaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settotal_neplaNull() {
                this[this.tableemployee_worklist.total_neplaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istotal_pla_minNull() {
                return this.IsNull(this.tableemployee_worklist.total_pla_minColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settotal_pla_minNull() {
                this[this.tableemployee_worklist.total_pla_minColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istotal_nepla_minNull() {
                return this.IsNull(this.tableemployee_worklist.total_nepla_minColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settotal_nepla_minNull() {
                this[this.tableemployee_worklist.total_nepla_minColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsimageIDNull() {
                return this.IsNull(this.tableemployee_worklist.imageIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetimageIDNull() {
                this[this.tableemployee_worklist.imageIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class imagesRow : global::System.Data.DataRow {
            
            private imagesDataTable tableimages;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal imagesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableimages = ((imagesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] image {
                get {
                    try {
                        return ((byte[])(this[this.tableimages.imageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'image\' in table \'images\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableimages.imageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sbyte imageID {
                get {
                    try {
                        return ((sbyte)(this[this.tableimages.imageIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'imageID\' in table \'images\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableimages.imageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsimageNull() {
                return this.IsNull(this.tableimages.imageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetimageNull() {
                this[this.tableimages.imageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsimageIDNull() {
                return this.IsNull(this.tableimages.imageIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetimageIDNull() {
                this[this.tableimages.imageIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class employee_worklistRowChangeEvent : global::System.EventArgs {
            
            private employee_worklistRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employee_worklistRowChangeEvent(employee_worklistRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employee_worklistRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class imagesRowChangeEvent : global::System.EventArgs {
            
            private imagesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public imagesRowChangeEvent(imagesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public imagesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591