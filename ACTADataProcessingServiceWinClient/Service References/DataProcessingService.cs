//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ACTADataProcessingServiceWinClient.DataProcessingService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://DataProcessingService", ConfigurationName="DataProcessingServiceWinClient.DataProcessingService.IDataProcessingService")]
    public interface IDataProcessingService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://DataProcessingService/IDataProcessingService/StartLogProcessing", ReplyAction="http://DataProcessingService/IDataProcessingService/StartLogProcessingResponse")]
        void StartLogProcessing();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://DataProcessingService/IDataProcessingService/StopLogProcessing", ReplyAction="http://DataProcessingService/IDataProcessingService/StopLogProcessingResponse")]
        bool StopLogProcessing();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://DataProcessingService/IDataProcessingService/IsProcessing", ReplyAction="http://DataProcessingService/IDataProcessingService/IsProcessingResponse")]
        bool IsProcessing();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://DataProcessingService/IDataProcessingService/ChekPrerequests", ReplyAction="http://DataProcessingService/IDataProcessingService/ChekPrerequestsResponse")]
        bool ChekPrerequests();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://DataProcessingService/IDataProcessingService/GetCurrentFileInProcessing", ReplyAction="http://DataProcessingService/IDataProcessingService/GetCurrentFileInProcessingRes" +
            "ponse")]
        string GetCurrentFileInProcessing();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://DataProcessingService/IDataProcessingService/GetDataProcessingState", ReplyAction="http://DataProcessingService/IDataProcessingService/GetDataProcessingStateRespons" +
            "e")]
        string GetDataProcessingState();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IDataProcessingServiceChannel : ACTADataProcessingServiceWinClient.DataProcessingService.IDataProcessingService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class DataProcessingServiceClient : System.ServiceModel.ClientBase<ACTADataProcessingServiceWinClient.DataProcessingService.IDataProcessingService>, ACTADataProcessingServiceWinClient.DataProcessingService.IDataProcessingService
    {
        
        public DataProcessingServiceClient()
        {
        }
        
        public DataProcessingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public DataProcessingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public DataProcessingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public DataProcessingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public void StartLogProcessing()
        {
            base.Channel.StartLogProcessing();
        }
        
        public bool StopLogProcessing()
        {
            return base.Channel.StopLogProcessing();
        }
        
        public bool IsProcessing()
        {
            return base.Channel.IsProcessing();
        }
        
        public bool ChekPrerequests()
        {
            return base.Channel.ChekPrerequests();
        }
        
        public string GetCurrentFileInProcessing()
        {
            return base.Channel.GetCurrentFileInProcessing();
        }
        
        public string GetDataProcessingState()
        {
            return base.Channel.GetDataProcessingState();
        }
    }
}
